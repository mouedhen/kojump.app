# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-07 03:31
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('schedule', '0001_initial'),
        ('equipments', '0002_institution'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(blank=True, max_length=254, verbose_name='adresse (1\xe8re ligne)')),
                ('street_address2', models.CharField(blank=True, max_length=254, verbose_name='adresse (2\xe8me ligne)')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='ville')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='pays')),
                ('gps_coordinates', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='coordonn\xe9es GPS')),
                ('code', models.CharField(max_length=12, verbose_name='code')),
                ('name', models.CharField(max_length=254, verbose_name='nom')),
                ('slug', models.CharField(max_length=254, verbose_name='slug')),
                ('thumbnail', models.ImageField(blank=True, default='default-equipment-thumbnail.png', null=True, upload_to='equipments/thumbnail', verbose_name='thumbnail')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('is_erp_cts', models.BooleanField(default=False, verbose_name='Chapitau tente ?')),
                ('is_erp_ref', models.BooleanField(default=False, verbose_name='Etablissement flottant ?')),
                ('is_erp_l', models.BooleanField(default=False, verbose_name='Salle polyvalente ?')),
                ('is_erp_n', models.BooleanField(default=False, verbose_name='Restaurant et d\xe9bit de boisson ?')),
                ('is_erp_o', models.BooleanField(default=False, verbose_name='H\xf4tel ?')),
                ('is_erp_oa', models.BooleanField(default=False, verbose_name="H\xf4tel restaurant d'altitude ?")),
                ('is_erp_p', models.BooleanField(default=False, verbose_name='Salle de danse et jeux ?')),
                ('is_erp_pa', models.BooleanField(default=False, verbose_name='Etablissement en plein air ?')),
                ('is_erp_r', models.BooleanField(default=False, verbose_name='Enseignement et colo ?')),
                ('is_erp_rpe', models.BooleanField(default=False, verbose_name='PE ?')),
                ('is_erp_sg', models.BooleanField(default=False, verbose_name='Structure gonflable ?')),
                ('is_erp_x', models.BooleanField(default=False, verbose_name='Etablissement sportif couvert ?')),
                ('have_showers', models.BooleanField(default=False, verbose_name='a douche ?')),
                ('have_lights', models.BooleanField(default=False, verbose_name='a lumi\xe8re ?')),
                ('tribune_places', models.IntegerField(blank=True, default=0, verbose_name='nombre de places dans la tribune')),
                ('have_heated_cloakroom', models.BooleanField(default=False, verbose_name='a vestiaires chauff\xe9es ?')),
                ('corridors_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='nombre de coulloir')),
                ('is_always_open', models.BooleanField(default=False, verbose_name='7d/7d - 24h/24h ?')),
                ('only_season', models.BooleanField(default=False, verbose_name='ouvert selement dans les saisons ?')),
                ('for_schools_use', models.BooleanField(default=False, verbose_name='pour utilisation scolaire ?')),
                ('for_clubs_use', models.BooleanField(default=False, verbose_name='pour utilisation des clubs ?')),
                ('for_others_use', models.BooleanField(default=False, verbose_name='pour utilisation autre ?')),
                ('for_individual_use', models.BooleanField(default=False, verbose_name='pour utilisation individuelle ?')),
                ('accessible_handicapped_m', models.BooleanField(default=False, verbose_name='acc\xe9ssible aux handicap\xe9s \xe0 mobilit\xe9 r\xe9duite ?')),
                ('accessible_handicapped_s', models.BooleanField(default=False, verbose_name='acc\xe9ssible aux handicap\xe9s sensoriaux ?')),
                ('evolution_area_access_hm', models.BooleanField(default=False, verbose_name="Zone d'\xe9volution acc\xe9ssible aux handicap\xe9s \xe0 mobilit\xe9 r\xe9duite ?")),
                ('evolution_area_access_hs', models.BooleanField(default=False, verbose_name="Zone d'\xe9volution acc\xe9ssible aux handicap\xe9s sensoriaux ?")),
                ('is_public', models.BooleanField(default=False, verbose_name='est publique ?')),
                ('price', models.TextField(blank=True, null=True, verbose_name='liste des prix')),
                ('overview', models.TextField(blank=True, null=True, verbose_name="vue d'ensemble")),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='num\xe9ro de t\xe9l\xe9phone')),
                ('mail', models.EmailField(blank=True, max_length=50, null=True, verbose_name='adresse e-mail')),
                ('website_url', models.URLField(blank=True, max_length=80, null=True, verbose_name='site web')),
                ('facebook_url', models.URLField(blank=True, max_length=80, null=True, verbose_name='facebook')),
                ('twitter_url', models.URLField(blank=True, max_length=80, null=True, verbose_name='twitter')),
                ('google_plus_url', models.URLField(blank=True, max_length=80, null=True, verbose_name='google plus')),
                ('promo_event', models.TextField(blank=True, null=True, verbose_name='promos & \xe9v\xeanements')),
                ('is_active', models.BooleanField(default=False, verbose_name='est actif ?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date de cr\xe9ation')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('activities', models.ManyToManyField(blank=True, related_name='equipments', to='equipments.Activity')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipments', to='equipments.EquipmentCategory')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipments.SiteEnvironment')),
                ('ground', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipments', to='equipments.SiteGround')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='equipments.Institution')),
                ('manager_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_equipment', to='equipments.ManagerCategory')),
                ('owner_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_equipment', to='equipments.ManagerCategory')),
                ('work_timetable', models.ManyToManyField(blank=True, related_name='equipments', to='schedule.TimeInterval')),
            ],
            options={
                'verbose_name': 'site sportif',
                'verbose_name_plural': 'sites sportifs',
            },
        ),
        migrations.CreateModel(
            name='EquipmentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default-equipment.png', models.ImageField(upload_to='equipments/images', verbose_name='image')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='equipments.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default-institution.png', models.ImageField(upload_to='institutions/images', verbose_name='image')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to='equipments.Institution')),
            ],
        ),
    ]
